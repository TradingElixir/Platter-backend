{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sachi\\\\Downloads\\\\ZapperAcademy\\\\frontendUI\\\\src\\\\components\\\\Tokens.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { Table } from \"@web3uikit/core\";\nimport { Reload } from \"@web3uikit/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Tokens(_ref) {\n  let {\n    wallet,\n    chain,\n    tokens,\n    setTokens\n  } = _ref;\n\n  async function getTokenBalances() {\n    const response = await axios.get(\"http://localhost:8080/tokenBalances\", {\n      params: {\n        address: wallet,\n        chain: chain\n      }\n    });\n\n    if (response.data) {\n      tokenProcessing(response.data);\n    }\n  }\n\n  function tokenProcessing(t) {\n    for (let i = 0; i < t.length; i++) {\n      t[i].bal = (Number(t[i].balance) / Number(`1E${t[i].decimals}`)).toFixed(3); //1E18\n\n      t[i].val = (Number(t[i].balance) / Number(`1E${t[i].decimals}`) * Number(t[i].usd)).toFixed(2);\n    }\n\n    setTokens(t);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tabHeading\",\n      children: [\"ERC20 Tokens \", /*#__PURE__*/_jsxDEV(Reload, {\n        onClick: getTokenBalances\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 48\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), tokens.length > 0 && /*#__PURE__*/_jsxDEV(Table, {\n      pageSize: 6,\n      noPagination: true,\n      style: {\n        width: \"900px\"\n      },\n      columnsConfig: \"300px 300px 250px\",\n      data: tokens.map(e => [e.symbol, e.bal, `$${e.val}`]),\n      header: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Currency\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Balance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Value\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_c = Tokens;\nexport default Tokens;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tokens\");","map":{"version":3,"names":["React","axios","Table","Reload","Tokens","wallet","chain","tokens","setTokens","getTokenBalances","response","get","params","address","data","tokenProcessing","t","i","length","bal","Number","balance","decimals","toFixed","val","usd","width","map","e","symbol"],"sources":["C:/Users/sachi/Downloads/ZapperAcademy/frontendUI/src/components/Tokens.js"],"sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport { Table } from \"@web3uikit/core\";\nimport { Reload } from \"@web3uikit/icons\";\n\nfunction Tokens({ wallet, chain, tokens, setTokens }) {\n\n  async function getTokenBalances() {\n    const response = await axios.get(\"http://localhost:8080/tokenBalances\", {\n      params: {\n        address: wallet,\n        chain: chain,\n      },\n    });\n\n    if (response.data) {\n      tokenProcessing(response.data);\n    }\n  }\n\n  function tokenProcessing(t) {\n\n    \n    for (let i = 0; i < t.length; i++) {\n      t[i].bal = (Number(t[i].balance) / Number(`1E${t[i].decimals}`)).toFixed(3); //1E18\n      t[i].val = ((Number(t[i].balance) / Number(`1E${t[i].decimals}`)) *Number(t[i].usd)).toFixed(2);\n    }\n\n    setTokens(t);\n\n    \n  }\n\n  return (\n    <>\n      <div className=\"tabHeading\">ERC20 Tokens <Reload onClick={getTokenBalances}/></div>\n\n      {tokens.length > 0 && (\n        <Table\n          pageSize={6}\n          noPagination={true}\n          style={{ width: \"900px\" }}\n          columnsConfig=\"300px 300px 250px\"\n          data={ tokens.map((e) => [e.symbol, e.bal, `$${e.val}`] )}\n          header={[\n            <span>Currency</span>,\n            <span>Balance</span>,\n            <span>Value</span>,\n          ]}\n        />\n      )}\n    </>\n  );\n}\n\nexport default Tokens;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,SAASC,MAAT,QAAuB,kBAAvB;;;;AAEA,SAASC,MAAT,OAAsD;EAAA,IAAtC;IAAEC,MAAF;IAAUC,KAAV;IAAiBC,MAAjB;IAAyBC;EAAzB,CAAsC;;EAEpD,eAAeC,gBAAf,GAAkC;IAChC,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAU,qCAAV,EAAiD;MACtEC,MAAM,EAAE;QACNC,OAAO,EAAER,MADH;QAENC,KAAK,EAAEA;MAFD;IAD8D,CAAjD,CAAvB;;IAOA,IAAII,QAAQ,CAACI,IAAb,EAAmB;MACjBC,eAAe,CAACL,QAAQ,CAACI,IAAV,CAAf;IACD;EACF;;EAED,SAASC,eAAT,CAAyBC,CAAzB,EAA4B;IAG1B,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,CAAC,CAACE,MAAtB,EAA8BD,CAAC,EAA/B,EAAmC;MACjCD,CAAC,CAACC,CAAD,CAAD,CAAKE,GAAL,GAAW,CAACC,MAAM,CAACJ,CAAC,CAACC,CAAD,CAAD,CAAKI,OAAN,CAAN,GAAuBD,MAAM,CAAE,KAAIJ,CAAC,CAACC,CAAD,CAAD,CAAKK,QAAS,EAApB,CAA9B,EAAsDC,OAAtD,CAA8D,CAA9D,CAAX,CADiC,CAC4C;;MAC7EP,CAAC,CAACC,CAAD,CAAD,CAAKO,GAAL,GAAW,CAAEJ,MAAM,CAACJ,CAAC,CAACC,CAAD,CAAD,CAAKI,OAAN,CAAN,GAAuBD,MAAM,CAAE,KAAIJ,CAAC,CAACC,CAAD,CAAD,CAAKK,QAAS,EAApB,CAA9B,GAAuDF,MAAM,CAACJ,CAAC,CAACC,CAAD,CAAD,CAAKQ,GAAN,CAA9D,EAA0EF,OAA1E,CAAkF,CAAlF,CAAX;IACD;;IAEDf,SAAS,CAACQ,CAAD,CAAT;EAGD;;EAED,oBACE;IAAA,wBACE;MAAK,SAAS,EAAC,YAAf;MAAA,yCAAyC,QAAC,MAAD;QAAQ,OAAO,EAAEP;MAAjB;QAAA;QAAA;QAAA;MAAA,QAAzC;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAGGF,MAAM,CAACW,MAAP,GAAgB,CAAhB,iBACC,QAAC,KAAD;MACE,QAAQ,EAAE,CADZ;MAEE,YAAY,EAAE,IAFhB;MAGE,KAAK,EAAE;QAAEQ,KAAK,EAAE;MAAT,CAHT;MAIE,aAAa,EAAC,mBAJhB;MAKE,IAAI,EAAGnB,MAAM,CAACoB,GAAP,CAAYC,CAAD,IAAO,CAACA,CAAC,CAACC,MAAH,EAAWD,CAAC,CAACT,GAAb,EAAmB,IAAGS,CAAC,CAACJ,GAAI,EAA5B,CAAlB,CALT;MAME,MAAM,EAAE,cACN;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADM,eAEN;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFM,eAGN;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHM;IANV;MAAA;MAAA;MAAA;IAAA,QAJJ;EAAA,gBADF;AAoBD;;KAhDQpB,M;AAkDT,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}